<Page
    x:Class="Navigation.Views.Inventory.VariantsDetailPage"
    x:Name="PageRoot"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="using:PhoneSelling.Data.Models"
    xmlns:viewmodel="using:PhoneSelling.ViewModel.Pages.Inventory"
    xmlns:conv="using:Navigation.Converters"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <!-- Style for GridView items -->
        <Style x:Key="GridViewItemStyle" TargetType="GridViewItem">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        </Style>
        <!-- Converters -->
        <conv:BoolToVisibilityConverter x:Key="BoolToVisConverter"/>
        <conv:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisConverter"/>
        <conv:VariantNameConverter x:Key="VariantNameConverter"/>
        <!-- Style for table headers -->
        <Style x:Key="TableHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
    </Page.Resources>

    <Grid>
        <!-- Outer ScrollViewer to enable scrolling -->
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <StackPanel >
                <!-- Search Bar -->
                <Grid x:Name="SearchPanel" Margin="20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!-- TextBox for Name -->
                    <Grid ColumnSpacing="20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0"
                                 Header="Enter variant name:"
                                 PlaceholderText="Name"
                                 Text="{x:Bind ViewModel.QueryViewModel.Query.SearchKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="0,0,0,10"/>
                        <!-- Search Button -->
                        <Button Margin="0,15,0,0" Grid.Column="1" Style="{StaticResource AccentButtonStyle}" Content="Search" Command="{x:Bind ViewModel.QueryViewModel.LoadDataCommand}" />

                        <!-- ToggleSwitch to select view mode; binding directly to ViewModel.IsGridView -->
                        <ToggleSwitch Grid.Column="2" x:Name="ViewToggleSwitch" Header="Grid View"
                                      IsOn="{x:Bind ViewModel.IsGridView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    </Grid>
                    <Grid Grid.Row="1" ColumnSpacing="20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="6*" />
                        </Grid.ColumnDefinitions>
                        <!-- ComboBox for Sorting -->
                        <ComboBox Grid.Column="0" Width="200" Header="Sort By"
                              ItemsSource="{x:Bind ViewModel.QueryViewModel.SortOptions, Mode=OneWay}"
                              SelectedValue="{x:Bind ViewModel.QueryViewModel.Query.Sortby, Mode=TwoWay}"
                              DisplayMemberPath="DisplayName"
                              SelectedValuePath="ActualValue"
                              Margin="0,0,0,10"/>
                        <!-- RadioButtons for Sorting Direction -->
                        <RadioButtons Grid.Column="1" Header="Sort direction:" 
                                  SelectedIndex="{x:Bind ViewModel.QueryViewModel.Query.SortDirectionIndex, Mode=TwoWay}"
                                  Margin="0,0,0,10">
                            <RadioButton Content="Ascending" Tag="Ascending"/>
                            <RadioButton Content="Descending" Tag="Descending"/>
                        </RadioButtons>
                    </Grid>


                </Grid>

                <!-- ListView Mode: Table-like layout for Variants -->
                <StackPanel Visibility="{x:Bind ViewModel.IsGridView, Converter={StaticResource InverseBoolToVisConverter}, Mode=OneWay}">
                    <!-- Table header -->
                    <Grid Background="LightGray" Padding="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Name" Style="{StaticResource TableHeaderStyle}" Grid.Column="0"/>
                        <TextBlock Text="Storage" Style="{StaticResource TableHeaderStyle}" Grid.Column="1"/>
                        <TextBlock Text="Cost Price" Style="{StaticResource TableHeaderStyle}" Grid.Column="2"/>
                        <TextBlock Text="Selling Price" Style="{StaticResource TableHeaderStyle}" Grid.Column="3"/>
                        <TextBlock Text="Stock" Style="{StaticResource TableHeaderStyle}" Grid.Column="4"/>
                        <TextBlock Text="Color" Style="{StaticResource TableHeaderStyle}" Grid.Column="5"/>
                    </Grid>
                    <!-- ListView for variants -->
                    <ListView ItemsSource="{x:Bind ViewModel.QueryViewModel.Items, Mode=OneWay}" Margin="0">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="data:Variant">
                                <Grid Padding="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{x:Bind Converter={StaticResource VariantNameConverter}}" Grid.Column="0" Margin="5" HorizontalAlignment="Left"/>
                                    <TextBlock Text="{x:Bind Storage}" Grid.Column="1" Margin="5" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{x:Bind CostPrice}" Grid.Column="2" Margin="5" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{x:Bind SellingPrice}" Grid.Column="3" Margin="5" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{x:Bind StockQuantity}" Grid.Column="4" Margin="5" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{x:Bind Color.Name}" Grid.Column="5" Margin="5" HorizontalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>

                <!-- GridView Mode: Displays variants in a grid -->
                <GridView ItemsSource="{x:Bind ViewModel.QueryViewModel.Items, Mode=OneWay}" 
                          Visibility="{x:Bind ViewModel.IsGridView, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}"
                          Margin="20"
                          ItemContainerStyle="{StaticResource GridViewItemStyle}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center">
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="data:Variant">
                            <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="5" Padding="10" Margin="5" Height="450">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="4*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="2*" />
                                    </Grid.RowDefinitions>
                                    <Image Grid.Row="0" Source="{x:Bind Color.UrlImage}" />
                                    <TextBlock Grid.Row="1" Text="{x:Bind Converter={StaticResource VariantNameConverter}}" TextWrapping="Wrap" FontWeight="Bold" FontSize="18" />
                                    <Grid Grid.Row="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Storage:" FontWeight="SemiBold" Grid.Row="0" Grid.Column="0"/>
                                        <TextBlock Text="{x:Bind Storage}" FontSize="16" Grid.Row="0" Grid.Column="1"/>
                                        <TextBlock Text="Color:" FontWeight="SemiBold"  Grid.Row="1" Grid.Column="0"/>
                                        <TextBlock Text="{x:Bind Color.Name}" FontSize="16"  Grid.Row="1" Grid.Column="1"/>
                                        <TextBlock Text="Cost Price:" FontWeight="SemiBold"  Grid.Row="2" Grid.Column="0"/>
                                        <TextBlock Text="{x:Bind CostPrice}" FontSize="16"  Grid.Row="2" Grid.Column="1"/>
                                        <TextBlock Text="Selling Price:" FontWeight="SemiBold"  Grid.Row="3" Grid.Column="0"/>
                                        <TextBlock Text="{x:Bind SellingPrice}" FontSize="16"  Grid.Row="3" Grid.Column="1"/>
                                        <TextBlock Text="Stock:" FontWeight="SemiBold"  Grid.Row="4" Grid.Column="0"/>
                                        <TextBlock Text="{x:Bind StockQuantity}" FontSize="16"  Grid.Row="4" Grid.Column="1"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid Orientation="Horizontal" MaximumRowsOrColumns="3" ItemWidth="300"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                </GridView>
                
                <!-- Navigation -->
                <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Center" Spacing="10" Margin="0,10,0,0">
                    <!-- Previous Page Button -->
                    <Button Width="80" Content="Previous" Command="{x:Bind ViewModel.QueryViewModel.PreviousPageCommand}" />

                    <!-- Current Page Display -->
                    <TextBlock Text="{x:Bind ViewModel.QueryViewModel.Query.PageNumber}" FontSize="16" VerticalAlignment="Center"/>

                    <!-- Next Page Button -->
                    <Button Width="80" Content="Next" Command="{x:Bind ViewModel.QueryViewModel.NextPageCommand}" />
                </StackPanel>

            </StackPanel>
            
        </ScrollViewer>
    </Grid>
</Page>
